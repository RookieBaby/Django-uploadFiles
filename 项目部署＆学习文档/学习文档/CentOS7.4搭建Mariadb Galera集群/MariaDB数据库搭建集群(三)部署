一.安装和配置相关文件
1.安装相关软件包
# yum install MariaDB-server MariaDB-client MariaDB-client

2.安装percona提供的软件包
yum install https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.10/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.10-1.el7.x86_64.rpm

3.在db1上启动MariaDB数据库，设置galera集群同步账号,进行安全初始化
systemctl start mariadb #启动服务
systemctl enable mariadb #设置开机启动
systemctl restart mariadb #重新启动
systemctl stop mariadb.service #停止MariaDB

4.MariaDB的相关简单配置,使用mysql_secure_installation命令进行配置。（MariaDB启动的情况下执行）
首先是设置密码，会提示先输入密码

Enter current password for root (enter for none):<–初次运行直接回车

设置密码

Set root password? [Y/n] <– 是否设置root用户密码，输入y并回车或直接回车
New password: <– 设置root用户的密码
Re-enter new password: <– 再输入一次你设置的密码

其他配置

Remove anonymous users? [Y/n] <– 是否删除匿名用户，回车

Disallow root login remotely? [Y/n] <–是否禁止root远程登录,回车,

Remove test database and access to it? [Y/n] <– 是否删除test数据库，回车

Reload privilege tables now? [Y/n] <– 是否重新加载权限表，回车

初始化MariaDB完成，接下来测试登录
mysql -uroot -p
输入设置密码

5.配置MariaDB的字符集
查看/etc/my.cnf文件内容，其中包含一句!includedir /etc/my.cnf.d 说明在该配置文件中引入/etc/my.cnf.d 目录下的配置文件。

1）使用vi server.cnf命令编辑server.cnf文件，在[mysqld]标签下添加

	init_connect='SET collation_connection = utf8_unicode_ci' 
	init_connect='SET NAMES utf8' 
	character-set-server=utf8 
	collation-server=utf8_unicode_ci 
	skip-character-set-client-handshake
 

如果/etc/my.cnf.d 目录下无server.cnf文件，则直接在/etc/my.cnf文件的[mysqld]标签下添加以上内容。

2）文件/etc/my.cnf.d/client.cnf

vi /etc/my.cnf.d/client.cnf
在[client]中添加

default-character-set=utf8
3）文件/etc/my.cnf.d/mysql-clients.cnf

vi /etc/my.cnf.d/mysql-clients.cnf
在[mysql]中添加

default-character-set=utf8
 全部配置完成，重启mariadb

systemctl restart mariadb
之后进入MariaDB查看字符集

mysql> show variables like "%character%";show variables like "%collation%";

显示为

 

复制代码
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client    | utf8                      |
| character_set_connection | utf8                      |
| character_set_database  | utf8                      |
| character_set_filesystem | binary                    |
| character_set_results    | utf8                      |
| character_set_server    | utf8                      |
| character_set_system    | utf8                      |
| character_sets_dir      | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

+----------------------+-----------------+
| Variable_name        | Value          |
+----------------------+-----------------+
| collation_connection | utf8_unicode_ci |
| collation_database  | utf8_unicode_ci |
| collation_server    | utf8_unicode_ci |
+----------------------+-----------------+
3 rows in set (0.00 sec)

字符集配置完成。

5. systemctl stop mariadb.service

6.# vim /etc/my.cnf.d/galera.cnf

[server]
[mysqld]
# 监听哪个地址，这里每个节点填对应的ip地址，更改为当前本机ip
bind-address=172.18.113.108 
# 监听哪个端口
port = 3306
# 设置默认字符编码集
collation-server = utf8_general_ci
init-connect = SET NAMES utf8
character-set-server = utf8
# 设置日志路径
log-error = /var/log/mariadb/mariadb.log
# 设置binlog
log-bin = mysql-bin
binlog_format=ROW
# 设置默认数据目录
datadir = /var/lib/mysql/
# 设置默认存储引擎
default-storage-engine=innodb
innodb_autoinc_lock_mode=2
[galera]
wsrep_on=ON
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
# galera集群名字
wsrep_cluster_name="galera_cluster"
#更改当前主机名
wsrep_node_name="db2" 
#部署服务器全部添加
wsrep_cluster_address = "gcomm://172.18.113.73:4567,172.18.113.108:4567,172.18.113.111:4567"
#更改为本机ip
wsrep_provider_options ="gmcast.listen_addr=tcp://172.18.113.108:4567;ist.recv_addr=172.18.108.73:4568"
#更改为当前ip
wsrep_node_address="172.18.113.108:4567"
# 设置galera集群同步的方法和用户名密码
wsrep_sst_auth=root:123456
#wsrep_sst_method=xtrabackup-v2
wsrep_sst_method=rsync
max_connections = 10000
key_buffer_size = 64M 
max_heap_table_size = 64M 
tmp_table_size = 64M 
innodb_buffer_pool_size = 128M
[embedded]
[mariadb]
[mariadb-10.1]
文件复制到其余服务器scp galera.cnf root@ip:/etc/my.cnf.d/ 注释标注为有更改的项需修改其余不动
二.启动galera集群
1、在db1上运行galera_new_cluster命令
# galera_new_cluster
2、在db1上查看集群状态
# mysql -uroot -p -e "show status like 'wsrep_cluster_size';"
+--------------------------+--------------------------------------+
| Variable_name            | Value                                |
+--------------------------+--------------------------------------+
| wsrep_cluster_size       | 1                                    |
+--------------------------+--------------------------------------+

3.在db2上运行MariaDB数据库
# systemctl start mariadb

4.在db1上检查集群状态

# mysql -uroot -p -e "show status like 'wsrep_cluster_size';"
+--------------------------+--------------------------------------+
| Variable_name            | Value                                |
+--------------------------+--------------------------------------+
| wsrep_cluster_size       | 2                                    |
+--------------------------+--------------------------------------+

5.在db3上运行MariaDB数据库

# systemctl start mariadb

6.在db1上检查集群状态

复制代码
# mysql -uroot -p -e "show status like 'wsrep_cluster_size';"
+--------------------------+--------------------------------------+
| Variable_name            | Value                                |
+--------------------------+--------------------------------------+
| wsrep_cluster_size       | 3                                    |
+--------------------------+--------------------------------------+

7.搭建完成

8.测试

在某一节点mysql命令行执行
MariaDB [(none)]> create database ceshi2222;
在其余节点运行
MariaDB [(none)]>  show databases;
如果显示添加的数据库说明多主同步集群搭建完成。


开机自启动
systemctl enable mariadb（三台都执行）


设置远程客户端登录
1.MariaDB [(none)]> use mysql;   //选择mysql数据库进行操作
2.MariaDB [mysql]> select user,password,host from user;  //查看user,password,host这三个字段的权限分配情况
+------+-------------------------------------------+-----------+
| user | password                                  | host      |
+------+-------------------------------------------+-----------+
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | localhost |
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | 127.0.0.1 |
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | ::1       |
+------+-------------------------------------------+-----------+
//通过以上输出可以看出数据库默认只允许用户root在本地服务器（localhost）上登录，不允许其他主机远程连接。
3.MariaDB [mysql]> grant all privileges on *.* to root@"%" identified by "需要设置的密码";  

//上面这条语句将允许用户root使用密码(mycisco.cc)在任何主机上连接该数据库，并赋予该用户所有权限。
4.MariaDB [mysql]> flush privileges;

5.MariaDB [mysql]> select user,password,host from user;

| user | password                                  | host      |
+------+-------------------------------------------+-----------+
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | localhost |
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | 127.0.0.1 |
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | ::1       |
| root | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 | %         |//这行中的“%”就意味着任何主机都被允许连接数据库

6.可以前往客户端进行登录，只需配置一台其余都可以登录















